<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from rbcar2.urdf.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rbcar">
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>
  <!-- check -->
  <!--xacro:property name="suspension_joint_damping" value="0.2" />
  <xacro:property name="suspension_joint_friction" value="0.7" /-->
  <!-- check -->
  <!-- xacro:macro name="rubber_wheel" params="name parent *origin reflect hq" -->
  <!-- Import all available sensors -->
  <!-- 
	<xacro:include filename="$(find robotnik_sensors)/urdf/all_sensors.urdf.xacro" />
  	<xacro:include filename="$(find robotnik_sensors)/urdf/utils/inertia.urdf.xacro" />
	-->
  <!-- ***************** -->
  <!-- Global parameters -->
  <!-- ***************** -->
  <!-- *************** -->
  <!-- Robot Elements -->
  <!-- *************** -->
  <link name="robot_base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <joint name="robot_base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.3"/>
    <parent link="robot_base_footprint"/>
    <child link="robot_base_link"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="robot_base_link">
    <inertial>
      <mass value="125.0"/>
      <origin xyz="0.917 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.917 0 0"/>
      <geometry>
        <mesh filename="package://rbcar_model/meshes/bases/rbcar_chassis_hq.stl"/>
      </geometry>
      <material name="gray">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.917 0 0"/>
      <geometry>
        <mesh filename="package://rbcar_model/meshes/bases/rbcar_chassis.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="robot_left_front_shock" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_left_steering_link"/>
    <origin xyz="1.916615                    0.60901                    0.0"/>
  </joint>
  <link name="robot_left_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="robot_left_steering_joint" type="revolute">
    <parent link="robot_left_steering_link"/>
    <child link="robot_left_front_axle_carrier"/>
    <axis xyz="0 0 1"/>
    <!-- this applies if we are setting the left wheel -->
    <limit effort="50" lower="-0.60822457" upper="0.785398163" velocity="25"/>
  </joint>
  <!-- ROS 2 transmission -->
  <transmission name="robot_left_steering_trans">
    <plugin>transmission_interface/SimpleTransmission</plugin>
    <actuator name="robot_left_steering_act" role="position"/>
    <joint name="robot_left_steering_joint" role="position">
      <!--<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>-->
      <mechanical_reduction>1.0</mechanical_reduction>
    </joint>
  </transmission>
  <gazebo reference="robot_left_steering_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_left_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="robot_left_front_axle" type="continuous">
    <parent link="robot_left_front_axle_carrier"/>
    <child link="robot_left_front_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <dynamics damping="0.2" friction="0.7"/>
  </joint>
  <!-- ROS 2 transmission -->
  <transmission name="robot_left_front_axle_trans">
    <plugin>transmission_interface/SimpleTransmission</plugin>
    <actuator name="robot_left_front_axle_act" role="velocity"/>
    <joint name="robot_left_front_axle" role="velocity">
      <mechanical_reduction>1.0</mechanical_reduction>
    </joint>
  </transmission>
  <gazebo reference="robot_left_front_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_left_front_wheel">
    <visual>
      <origin rpy="-1.57079633 0 3.14159265" xyz="0                        0                        -0.0825 "/>
      <geometry>
        <!--cylinder radius="${tire_dia / 2}" length="${tire_width}"/-->
        <mesh filename="package://rbcar_model/meshes/wheels/polaris/right_front_wheel.STL"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      -0.0025000000000000022"/>
      <geometry>
        <cylinder length="0.245" radius="0.3195"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.27178966666666665" ixy="0" ixz="0" iyy="0.27178966666666665" iyz="0" izz="0.463546"/>
    </inertial>
  </link>
  <gazebo reference="robot_left_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="robot_right_front_shock" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_right_steering_link"/>
    <origin xyz="1.916615                    -0.60901                    0.0"/>
  </joint>
  <link name="robot_right_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="robot_right_steering_joint" type="revolute">
    <parent link="robot_right_steering_link"/>
    <child link="robot_right_front_axle_carrier"/>
    <axis xyz="0 0 1"/>
    <!-- this applies if we are setting the right wheel -->
    <limit effort="50" lower="-0.785398163" upper="0.60822457" velocity="25"/>
  </joint>
  <!-- ROS 2 transmission -->
  <transmission name="robot_right_steering_trans">
    <plugin>transmission_interface/SimpleTransmission</plugin>
    <actuator name="robot_right_steering_act" role="position"/>
    <joint name="robot_right_steering_joint" role="position">
      <!--<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>-->
      <mechanical_reduction>1.0</mechanical_reduction>
    </joint>
  </transmission>
  <gazebo reference="robot_right_steering_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_right_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="robot_right_front_axle" type="continuous">
    <parent link="robot_right_front_axle_carrier"/>
    <child link="robot_right_front_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <dynamics damping="0.2" friction="0.7"/>
  </joint>
  <!-- ROS 2 transmission -->
  <transmission name="robot_right_front_axle_trans">
    <plugin>transmission_interface/SimpleTransmission</plugin>
    <actuator name="robot_right_front_axle_act" role="velocity"/>
    <joint name="robot_right_front_axle" role="velocity">
      <mechanical_reduction>1.0</mechanical_reduction>
    </joint>
  </transmission>
  <gazebo reference="robot_right_front_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_right_front_wheel">
    <visual>
      <origin rpy="1.57079633 0 3.14159265" xyz="0                        0                        0.0825 "/>
      <geometry>
        <!--cylinder radius="${tire_dia / 2}" length="${tire_width}"/-->
        <mesh filename="package://rbcar_model/meshes/wheels/polaris/right_front_wheel.STL"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      0.0025000000000000022"/>
      <geometry>
        <cylinder length="0.245" radius="0.3195"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.27178966666666665" ixy="0" ixz="0" iyy="0.27178966666666665" iyz="0" izz="0.463546"/>
    </inertial>
  </link>
  <gazebo reference="robot_right_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="robot_left_rear_shock" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_left_rear_axle_carrier"/>
    <origin xyz="0.08338500000000004                    0.60901                    0.0"/>
  </joint>
  <link name="robot_left_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="robot_left_rear_axle" type="continuous">
    <parent link="robot_left_rear_axle_carrier"/>
    <child link="robot_left_rear_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <dynamics damping="0.2" friction="0.7"/>
  </joint>
  <!-- ROS 2 transmission -->
  <transmission name="robot_left_rear_axle_trans">
    <plugin>transmission_interface/SimpleTransmission</plugin>
    <actuator name="robot_left_rear_axle_act" role="velocity"/>
    <joint name="robot_left_rear_axle" role="velocity">
      <mechanical_reduction>1.0</mechanical_reduction>
    </joint>
  </transmission>
  <gazebo reference="robot_left_rear_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_left_rear_wheel">
    <visual>
      <origin rpy="-1.57079633 0 3.14159265" xyz="0                        0                        -0.0825 "/>
      <geometry>
        <!--cylinder radius="${tire_dia / 2}" length="${tire_width}"/-->
        <mesh filename="package://rbcar_model/meshes/wheels/polaris/right_front_wheel.STL"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      -0.0025000000000000022"/>
      <geometry>
        <cylinder length="0.245" radius="0.3195"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.27178966666666665" ixy="0" ixz="0" iyy="0.27178966666666665" iyz="0" izz="0.463546"/>
    </inertial>
  </link>
  <gazebo reference="robot_left_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="robot_right_rear_shock" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_right_rear_axle_carrier"/>
    <origin xyz="0.08338500000000004                    -0.60901                    0.0"/>
  </joint>
  <link name="robot_right_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="robot_right_rear_axle" type="continuous">
    <parent link="robot_right_rear_axle_carrier"/>
    <child link="robot_right_rear_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <dynamics damping="0.2" friction="0.7"/>
  </joint>
  <!-- ROS 2 transmission -->
  <transmission name="robot_right_rear_axle_trans">
    <plugin>transmission_interface/SimpleTransmission</plugin>
    <actuator name="robot_right_rear_axle_act" role="velocity"/>
    <joint name="robot_right_rear_axle" role="velocity">
      <mechanical_reduction>1.0</mechanical_reduction>
    </joint>
  </transmission>
  <gazebo reference="robot_right_rear_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_right_rear_wheel">
    <visual>
      <origin rpy="1.57079633 0 3.14159265" xyz="0                        0                        0.0825 "/>
      <geometry>
        <!--cylinder radius="${tire_dia / 2}" length="${tire_width}"/-->
        <mesh filename="package://rbcar_model/meshes/wheels/polaris/right_front_wheel.STL"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      0.0025000000000000022"/>
      <geometry>
        <cylinder length="0.245" radius="0.3195"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.27178966666666665" ixy="0" ixz="0" iyy="0.27178966666666665" iyz="0" izz="0.463546"/>
    </inertial>
  </link>
  <gazebo reference="robot_right_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Sensors -->
  <!-- 
	<xacro:sensor_rslidar_16 prefix="$(arg prefix)top_3d_laser" parent="$(arg prefix)base_link"  gpu="$(arg gpu)">
	  <origin xyz="1.163 0.0 1.602" rpy="0 0.2637 0"/>
	</xacro:sensor_rslidar_16>

	<xacro:sensor_imu_hector prefix="$(arg prefix)imu" parent="$(arg prefix)base_link">
		<origin xyz="0.319 0.018 0.676" rpy="0 0 0"/>
	</xacro:sensor_imu_hector>

	<xacro:sensor_sick_outdoorscan3 prefix="$(arg prefix)front_laser" parent="$(arg prefix)base_link" prefix_topic="front_laser" min_angle="-1.5" max_angle="1.5" gpu="$(arg gpu)">
		<origin xyz="2.101 0 0.206" rpy="0 0 0"/>
	</xacro:sensor_sick_outdoorscan3>

	<xacro:sensor_hokuyo_utm30lx prefix="$(arg prefix)rear_laser" parent="$(arg prefix)base_link" gpu="$(arg gpu)" prefix_topic="rear_laser">
      		<origin xyz="-0.42925 0.0 0.24674" rpy="0 0 ${PI}"/>
  	</xacro:sensor_hokuyo_utm30lx>
	
	<xacro:sensor_gps prefix="$(arg prefix)gps" parent="$(arg prefix)base_link" gps_latitude="$(arg gps_latitude)" gps_longitude="$(arg gps_longitude)">
		<origin xyz="0.491 0 1.503" rpy="0 0 0"/>
	</xacro:sensor_gps>
	-->
  <!-- Gazebo plugins -->
  <!--
	<gazebo>
		<plugin name="ground_truth_controller" filename="librobotnik_gazebo_ground_truth_odom.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>50.0</updateRate>
			<bodyName>$(arg prefix)base_link</bodyName>
			<frameName>base_footprint_gt</frameName>
			<worldBodyName>world</worldBodyName>
			<worldFrameName>$(arg prefix)odom</worldFrameName>
			<topicName>odom_gt</topicName>
			<gaussianNoise>0.01</gaussianNoise>
			<xyzOffset>0.0 0 0</xyzOffset>
			<rpyOffset>0 0 0</rpyOffset>
			<applyOffset>False</applyOffset>
			<broadcastTF>True</broadcastTF>
		</plugin>
	</gazebo>

	<gazebo>
		<plugin name="gps_ground_truth_controller" filename="librobotnik_gazebo_ground_truth_odom.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>50.0</updateRate>
			<bodyName>$(arg prefix)gps_base_link</bodyName>
			<frameName>gps_base_link_gt</frameName>
			<worldBodyName>world</worldBodyName>
			<worldFrameName>world</worldFrameName>
			<topicName>odom_gt</topicName>
			<gaussianNoise>0.01</gaussianNoise>
			<xyzOffset>0.0 0 0</xyzOffset>
			<rpyOffset>0 0 0</rpyOffset>
			<applyOffset>False</applyOffset>
			<broadcastTF>True</broadcastTF>
		</plugin>
	</gazebo>
	-->
</robot>
